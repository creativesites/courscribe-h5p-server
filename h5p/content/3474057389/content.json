{"presentation":{"slides":[{"elements":[{"x":30.00027233115469,"y":30.000625685017216,"width":40,"height":40,"action":{"library":"H5P.AdvancedText 1.1","params":{"text":"<h2 style=\"text-align:center\"><span style=\"font-size:2em\">Introduction to React components</span></h2>\n"},"subContentId":"1b516f02-0a55-4472-afa9-6854a6ba1b9b","metadata":{"contentType":"Text","license":"U","title":"Untitled Text","authors":[],"changes":[]}},"alwaysDisplayComments":false,"backgroundOpacity":0,"displayAsButton":false,"buttonSize":"big","goToSlideType":"specified","invisible":false,"solution":""}],"keywords":["{\"moduleId\":\"(api)/./pages/api/h5p/generate-presentation.js\",\"lessonName\":\"Introduction to React components\",\"curriculumId\":\"0c9eddeb-9538-40f5-8a48-39b54494a351\"}"],"slideBackgroundSelector":{}},{"elements":[{"x":29.411764705882355,"y":4.315069084256039,"width":39.99869281045751,"height":10.787672710640097,"action":{"library":"H5P.AdvancedText 1.1","params":{"text":"<h2 style=\"text-align:center\"><span style=\"font-size:1.675em\">Types of components:</span></h2>\n\n<p> </p>\n"},"subContentId":"cc5c0de5-1531-43e5-b45d-e6e15a758df1","metadata":{"contentType":"Text","license":"U","title":"Untitled Text","authors":[],"changes":[]}},"alwaysDisplayComments":false,"backgroundOpacity":0,"displayAsButton":false,"buttonSize":"big","goToSlideType":"specified","invisible":false,"solution":""},{"x":3.2679738562091507,"y":21.575345421280193,"width":92.5925925925926,"height":73.35617443235266,"action":{"library":"H5P.AdvancedText 1.1","params":{"text":"<p>In React, there are two main types of components- functional components and class components. We will explore the difference between the two, when to use each type, and how to create them.</p>\n"},"subContentId":"6218f6d1-3fef-4cdd-8eb8-de929916cf13","metadata":{"contentType":"Text","license":"U","title":"Untitled Text","authors":[],"changes":[]}},"alwaysDisplayComments":false,"backgroundOpacity":0,"displayAsButton":false,"buttonSize":"big","goToSlideType":"specified","invisible":false,"solution":""}],"keywords":[],"slideBackgroundSelector":{}},{"elements":[{"x":29.411764705882355,"y":4.315069084256039,"width":39.99869281045751,"height":10.787672710640097,"action":{"library":"H5P.AdvancedText 1.1","params":{"text":"<h2 style=\"text-align:center\"><span style=\"font-size:1.675em\">Creating functional components:</span></h2>\n\n<p> </p>\n"},"subContentId":"011bc66e-6183-4653-8f05-d7326f9794f2","metadata":{"contentType":"Text","license":"U","title":"Untitled Text","authors":[],"changes":[]}},"alwaysDisplayComments":false,"backgroundOpacity":0,"displayAsButton":false,"buttonSize":"big","goToSlideType":"specified","invisible":false,"solution":""},{"x":3.2679738562091507,"y":21.575345421280193,"width":92.5925925925926,"height":73.35617443235266,"action":{"library":"H5P.AdvancedText 1.1","params":{"text":"<p>Functional components are simple JavaScript functions that return React elements. They are easy to create and can make developing React applications a breeze. In this section, we will explore how to create functional components, and their benefits.</p>\n"},"subContentId":"f80afa10-17de-47d1-b29c-e45ee43b267c","metadata":{"contentType":"Text","license":"U","title":"Untitled Text","authors":[],"changes":[]}},"alwaysDisplayComments":false,"backgroundOpacity":0,"displayAsButton":false,"buttonSize":"big","goToSlideType":"specified","invisible":false,"solution":""}],"keywords":[],"slideBackgroundSelector":{}},{"elements":[{"x":29.411764705882355,"y":4.315069084256039,"width":39.99869281045751,"height":10.787672710640097,"action":{"library":"H5P.AdvancedText 1.1","params":{"text":"<h2 style=\"text-align:center\"><span style=\"font-size:1.675em\">Creating class components:</span></h2>\n\n<p> </p>\n"},"subContentId":"14ffc9fa-3b97-4188-ae81-f3fdbd5857dc","metadata":{"contentType":"Text","license":"U","title":"Untitled Text","authors":[],"changes":[]}},"alwaysDisplayComments":false,"backgroundOpacity":0,"displayAsButton":false,"buttonSize":"big","goToSlideType":"specified","invisible":false,"solution":""},{"x":3.2679738562091507,"y":21.575345421280193,"width":92.5925925925926,"height":73.35617443235266,"action":{"library":"H5P.AdvancedText 1.1","params":{"text":"<p>Class components are more complex than functional components, and offer more functionality. They allow for the use of lifecycle methods and state, making them more versatile. In this section, we will explore how to create class components, and how they differ from functional components.</p>\n"},"subContentId":"4719676d-db2e-4fc3-85d8-e8dcade317a3","metadata":{"contentType":"Text","license":"U","title":"Untitled Text","authors":[],"changes":[]}},"alwaysDisplayComments":false,"backgroundOpacity":0,"displayAsButton":false,"buttonSize":"big","goToSlideType":"specified","invisible":false,"solution":""}],"keywords":[],"slideBackgroundSelector":{}},{"elements":[{"x":29.411764705882355,"y":4.315069084256039,"width":39.99869281045751,"height":10.787672710640097,"action":{"library":"H5P.AdvancedText 1.1","params":{"text":"<h2 style=\"text-align:center\"><span style=\"font-size:1.675em\">Props in React:</span></h2>\n\n<p> </p>\n"},"subContentId":"c9a0ab2e-571b-444b-8e4e-d1a11d3d5cee","metadata":{"contentType":"Text","license":"U","title":"Untitled Text","authors":[],"changes":[]}},"alwaysDisplayComments":false,"backgroundOpacity":0,"displayAsButton":false,"buttonSize":"big","goToSlideType":"specified","invisible":false,"solution":""},{"x":3.2679738562091507,"y":21.575345421280193,"width":92.5925925925926,"height":73.35617443235266,"action":{"library":"H5P.AdvancedText 1.1","params":{"text":"<p>Props are a critical feature of React components. They allow for the passing of data between components, making development faster and more efficient. We will explore what props are, how to use them, and their importance in the React architecture.</p>\n"},"subContentId":"d2543b4a-c429-4e09-9ad0-65e6004360ce","metadata":{"contentType":"Text","license":"U","title":"Untitled Text","authors":[],"changes":[]}},"alwaysDisplayComments":false,"backgroundOpacity":0,"displayAsButton":false,"buttonSize":"big","goToSlideType":"specified","invisible":false,"solution":""}],"keywords":[],"slideBackgroundSelector":{}},{"elements":[{"x":29.411764705882355,"y":4.315069084256039,"width":39.99869281045751,"height":10.787672710640097,"action":{"library":"H5P.AdvancedText 1.1","params":{"text":"<h2 style=\"text-align:center\"><span style=\"font-size:1.675em\">State in React:</span></h2>\n\n<p> </p>\n"},"subContentId":"bf52b82d-4db6-43ec-b28c-05976aa1e5e3","metadata":{"contentType":"Text","license":"U","title":"Untitled Text","authors":[],"changes":[]}},"alwaysDisplayComments":false,"backgroundOpacity":0,"displayAsButton":false,"buttonSize":"big","goToSlideType":"specified","invisible":false,"solution":""},{"x":3.2679738562091507,"y":21.575345421280193,"width":92.5925925925926,"height":73.35617443235266,"action":{"library":"H5P.AdvancedText 1.1","params":{"text":"<p>State is another critical feature of React components. It allows components to store and manage data internally, without the need for external data sources. In this section, we will explore what state is, how to use it, and its importance in the React architecture.</p>\n"},"subContentId":"03568a5c-a734-405e-9716-b0d01c1e6350","metadata":{"contentType":"Text","license":"U","title":"Untitled Text","authors":[],"changes":[]}},"alwaysDisplayComments":false,"backgroundOpacity":0,"displayAsButton":false,"buttonSize":"big","goToSlideType":"specified","invisible":false,"solution":""}],"keywords":[],"slideBackgroundSelector":{}},{"elements":[{"x":29.411764705882355,"y":4.315069084256039,"width":39.99869281045751,"height":10.787672710640097,"action":{"library":"H5P.AdvancedText 1.1","params":{"text":"<h2 style=\"text-align:center\"><span style=\"font-size:1.675em\">Handling events:</span></h2>\n\n<p> </p>\n"},"subContentId":"bf5b19a5-9bc7-4fd3-803b-8b043c952d89","metadata":{"contentType":"Text","license":"U","title":"Untitled Text","authors":[],"changes":[]}},"alwaysDisplayComments":false,"backgroundOpacity":0,"displayAsButton":false,"buttonSize":"big","goToSlideType":"specified","invisible":false,"solution":""},{"x":3.2679738562091507,"y":21.575345421280193,"width":92.5925925925926,"height":73.35617443235266,"action":{"library":"H5P.AdvancedText 1.1","params":{"text":"<p>In React, events are handled differently than in traditional DOM manipulation. We will explore how React handles events, how to create event handlers, and the best practices for event handling in React components.</p>\n"},"subContentId":"f2d0117d-5e29-45ad-801c-c50ec514a587","metadata":{"contentType":"Text","license":"U","title":"Untitled Text","authors":[],"changes":[]}},"alwaysDisplayComments":false,"backgroundOpacity":0,"displayAsButton":false,"buttonSize":"big","goToSlideType":"specified","invisible":false,"solution":""}],"keywords":[],"slideBackgroundSelector":{}},{"elements":[{"x":29.411764705882355,"y":4.315069084256039,"width":39.99869281045751,"height":10.787672710640097,"action":{"library":"H5P.AdvancedText 1.1","params":{"text":"<h2 style=\"text-align:center\"><span style=\"font-size:1.675em\">Conditional rendering:</span></h2>\n\n<p> </p>\n"},"subContentId":"16ac09ac-a45b-42ff-8faa-dcd1471e1771","metadata":{"contentType":"Text","license":"U","title":"Untitled Text","authors":[],"changes":[]}},"alwaysDisplayComments":false,"backgroundOpacity":0,"displayAsButton":false,"buttonSize":"big","goToSlideType":"specified","invisible":false,"solution":""},{"x":3.2679738562091507,"y":21.575345421280193,"width":92.5925925925926,"height":73.35617443235266,"action":{"library":"H5P.AdvancedText 1.1","params":{"text":"<p>In React, conditional rendering is used to display different content based on certain conditions. It allows for more dynamic and responsive user interfaces. In this section, we will explore how to use conditional rendering in React components, and its benefits.</p>\n"},"subContentId":"c3d3e262-06e6-4b82-a580-321dce3e450d","metadata":{"contentType":"Text","license":"U","title":"Untitled Text","authors":[],"changes":[]}},"alwaysDisplayComments":false,"backgroundOpacity":0,"displayAsButton":false,"buttonSize":"big","goToSlideType":"specified","invisible":false,"solution":""}],"keywords":[],"slideBackgroundSelector":{}},{"elements":[{"x":29.411764705882355,"y":4.315069084256039,"width":39.99869281045751,"height":10.787672710640097,"action":{"library":"H5P.AdvancedText 1.1","params":{"text":"<h2 style=\"text-align:center\"><span style=\"font-size:1.675em\">Component lifecycle:</span></h2>\n\n<p> </p>\n"},"subContentId":"f5ea5030-a914-40eb-bd9a-452567db6840","metadata":{"contentType":"Text","license":"U","title":"Untitled Text","authors":[],"changes":[]}},"alwaysDisplayComments":false,"backgroundOpacity":0,"displayAsButton":false,"buttonSize":"big","goToSlideType":"specified","invisible":false,"solution":""},{"x":3.2679738562091507,"y":21.575345421280193,"width":92.5925925925926,"height":73.35617443235266,"action":{"library":"H5P.AdvancedText 1.1","params":{"text":"<p>The React component lifecycle is a series of methods that are called at different stages of a component's existence. They allow for the manipulation of how and when a component is rendered, and give developers more control. In this section, we will explore the different stages of the component lifecycle, the methods associated with each, and how to use them.</p>\n"},"subContentId":"3d569b75-8b0a-46c9-b6f6-791cec16f42a","metadata":{"contentType":"Text","license":"U","title":"Untitled Text","authors":[],"changes":[]}},"alwaysDisplayComments":false,"backgroundOpacity":0,"displayAsButton":false,"buttonSize":"big","goToSlideType":"specified","invisible":false,"solution":""}],"keywords":[],"slideBackgroundSelector":{}},{"elements":[{"x":29.411764705882355,"y":4.315069084256039,"width":39.99869281045751,"height":10.787672710640097,"action":{"library":"H5P.AdvancedText 1.1","params":{"text":"<h2 style=\"text-align:center\"><span style=\"font-size:1.675em\">React hooks:</span></h2>\n\n<p> </p>\n"},"subContentId":"3d834f27-8f24-44c9-b6a5-33d6a9124e6a","metadata":{"contentType":"Text","license":"U","title":"Untitled Text","authors":[],"changes":[]}},"alwaysDisplayComments":false,"backgroundOpacity":0,"displayAsButton":false,"buttonSize":"big","goToSlideType":"specified","invisible":false,"solution":""},{"x":3.2679738562091507,"y":21.575345421280193,"width":92.5925925925926,"height":73.35617443235266,"action":{"library":"H5P.AdvancedText 1.1","params":{"text":"<p>React hooks are a relatively new addition to the React programming model. They allow for the use of state and other React features in functional components, without the need for class components. In this section, we will explore what React hooks are, how to use them, and their benefits.</p>\n"},"subContentId":"5d7a24a3-5917-433b-989f-7fc1d7b50f16","metadata":{"contentType":"Text","license":"U","title":"Untitled Text","authors":[],"changes":[]}},"alwaysDisplayComments":false,"backgroundOpacity":0,"displayAsButton":false,"buttonSize":"big","goToSlideType":"specified","invisible":false,"solution":""}],"keywords":[],"slideBackgroundSelector":{}},{"elements":[{"x":29.411764705882355,"y":4.315069084256039,"width":39.99869281045751,"height":10.787672710640097,"action":{"library":"H5P.AdvancedText 1.1","params":{"text":"<h2 style=\"text-align:center\"><span style=\"font-size:1.675em\">Component composition:</span></h2>\n\n<p> </p>\n"},"subContentId":"9955fe3e-8289-4d06-9126-e45df8d6e3cb","metadata":{"contentType":"Text","license":"U","title":"Untitled Text","authors":[],"changes":[]}},"alwaysDisplayComments":false,"backgroundOpacity":0,"displayAsButton":false,"buttonSize":"big","goToSlideType":"specified","invisible":false,"solution":""},{"x":3.2679738562091507,"y":21.575345421280193,"width":92.5925925925926,"height":73.35617443235266,"action":{"library":"H5P.AdvancedText 1.1","params":{"text":"<p>Component composition is the process of combining multiple components into a single, more complex component. It allows for more efficient and modular development, and can help to create more dynamic user interfaces. In this section, we will explore how to use component composition in React, and its benefits.</p>\n"},"subContentId":"88350e7f-57e4-4c44-8259-2d3c0ab9f2a7","metadata":{"contentType":"Text","license":"U","title":"Untitled Text","authors":[],"changes":[]}},"alwaysDisplayComments":false,"backgroundOpacity":0,"displayAsButton":false,"buttonSize":"big","goToSlideType":"specified","invisible":false,"solution":""}],"keywords":[],"slideBackgroundSelector":{}},{"elements":[{"x":29.411764705882355,"y":4.315069084256039,"width":39.99869281045751,"height":10.787672710640097,"action":{"library":"H5P.AdvancedText 1.1","params":{"text":"<h2 style=\"text-align:center\"><span style=\"font-size:1.675em\">Best practices for React components:</span></h2>\n\n<p> </p>\n"},"subContentId":"85777dcc-7fd7-44c5-bf8c-d7f56b7357a0","metadata":{"contentType":"Text","license":"U","title":"Untitled Text","authors":[],"changes":[]}},"alwaysDisplayComments":false,"backgroundOpacity":0,"displayAsButton":false,"buttonSize":"big","goToSlideType":"specified","invisible":false,"solution":""},{"x":3.2679738562091507,"y":21.575345421280193,"width":92.5925925925926,"height":73.35617443235266,"action":{"library":"H5P.AdvancedText 1.1","params":{"text":"<p>As with any programming model, there are certain best practices that should be followed when creating React components. In this section, we will explore some best practices to follow when creating React components, including the use of reusable code, avoiding unnecessary state, and testing.</p>\n"},"subContentId":"9432f12f-fcf6-4fd3-9938-7dd073626ada","metadata":{"contentType":"Text","license":"U","title":"Untitled Text","authors":[],"changes":[]}},"alwaysDisplayComments":false,"backgroundOpacity":0,"displayAsButton":false,"buttonSize":"big","goToSlideType":"specified","invisible":false,"solution":""}],"keywords":[],"slideBackgroundSelector":{}}],"keywordListEnabled":true,"globalBackgroundSelector":{"imageGlobalBackground":{"path":"images/image-KHRuMxGE.png","mime":"image/png","copyright":{"license":"U"},"width":1202,"height":674}},"keywordListAlwaysShow":false,"keywordListAutoHide":false,"keywordListOpacity":90},"override":{"activeSurface":false,"hideSummarySlide":false,"summarySlideSolutionButton":true,"summarySlideRetryButton":true,"enablePrintButton":true,"social":{"showFacebookShare":true,"facebookShare":{"url":"@currentpageurl","quote":"I scored @score out of @maxScore on a task at @currentpageurl."},"showTwitterShare":true,"twitterShare":{"statement":"I scored @score out of @maxScore on a task at @currentpageurl.","url":"@currentpageurl","hashtags":"h5p, course"},"showGoogleShare":false,"googleShareUrl":"@currentpageurl"}},"l10n":{"slide":"Slide","score":"Score","yourScore":"Your Score","maxScore":"Max Score","total":"Total","totalScore":"Total Score","showSolutions":"Show solutions","retry":"Retry","exportAnswers":"Export text","hideKeywords":"Hide sidebar navigation menu","showKeywords":"Show sidebar navigation menu","fullscreen":"Fullscreen","exitFullscreen":"Exit fullscreen","prevSlide":"Previous slide","nextSlide":"Next slide","currentSlide":"Current slide","lastSlide":"Last slide","solutionModeTitle":"Exit solution mode","solutionModeText":"Solution Mode","summaryMultipleTaskText":"Multiple tasks","scoreMessage":"You achieved:","shareFacebook":"Share on Facebook","shareTwitter":"Share on Twitter","shareGoogle":"Share on Google+","summary":"Summary","solutionsButtonTitle":"Show comments","printTitle":"Print","printIngress":"How would you like to print this presentation?","printAllSlides":"Print all slides","printCurrentSlide":"Print current slide","noTitle":"No title","accessibilitySlideNavigationExplanation":"Use left and right arrow to change slide in that direction whenever canvas is selected.","accessibilityCanvasLabel":"Presentation canvas. Use left and right arrow to move between slides.","accessibilityProgressBarLabel":"Choose slide to display","containsNotCompleted":"@slideName contains not completed interaction","containsCompleted":"@slideName contains completed interaction","slideCount":"Slide @index of @total","containsOnlyCorrect":"@slideName only has correct answers","containsIncorrectAnswers":"@slideName has incorrect answers","shareResult":"Share Result","accessibilityTotalScore":"You got @score of @maxScore points in total","accessibilityEnteredFullscreen":"Entered fullscreen","accessibilityExitedFullscreen":"Exited fullscreen","confirmDialogHeader":"Submit your answers","confirmDialogText":"This will submit your results, do you want to continue?","confirmDialogConfirmText":"Submit and see results","slideshowNavigationLabel":"Slideshow navigation"}}
